import java.util.*;import java.awt.Color;//Controle grillepublic class ControleGrille  {	private final int NBCASESLARGEUR=12;	private final int NBCASESLONGUEUR=21;	public Color[][] grille;	public Tetraminos tetraminoActuel;	public Tetraminos tetraminoPrecedentePosition;	public Tetraminos tetraminoHold;	public Tetraminos tetraminoSuivant;	GestionTetraminos gestionTetraminos=new GestionTetraminos();	public int score=0;	public boolean perdu=false;	public int niveau=0;	public ControleGrille(){	}		public void initialiserGrille(){		grille=new Color[NBCASESLONGUEUR][NBCASESLARGEUR];		for(int i=0;i<grille.length;i++){			for(int j=0;j<grille[i].length;j++){				if(j==0||j==grille[i].length-1){					grille[i][j]=Color.gray;				}else{					grille[i][j]=Color.black;				}			}		}		for(int k=0;k<NBCASESLARGEUR;k++){			grille[NBCASESLONGUEUR-1][k]=Color.gray;		}		tetraminoHold=gestionTetraminos.TetraminoAleatoire();		tetraminoSuivant=gestionTetraminos.TetraminoAleatoire();		initialiserTetramino();	}				public void initialiserTetramino(){		Point[] coordonneesTetraActuel=new Point[4];//=tetraminoHold.coordsTetrimino;		for (int i=0;i<4;i++){			int x=tetraminoHold.coordsTetrimino[i].x;			int y=tetraminoHold.coordsTetrimino[i].y;			coordonneesTetraActuel[i]=new Point(x,y);		}		Color couleurTetraActuel=tetraminoHold.couleurTetra;		if(couleurTetraActuel==Color.cyan){			tetraminoActuel=new Tetraminos(coordonneesTetraActuel,couleurTetraActuel ,new Point(5,2));		}else{			tetraminoActuel=new Tetraminos(coordonneesTetraActuel,couleurTetraActuel ,new Point(5,1));		}		Point[] coordonneesTetraHold=tetraminoSuivant.coordsTetrimino;		Color couleurTetraHold=tetraminoSuivant.couleurTetra;		tetraminoHold=new Tetraminos(coordonneesTetraHold,couleurTetraHold);		tetraminoSuivant=gestionTetraminos.TetraminoAleatoire();		if(ObjetDessous()==true){				perdu=true;						}	}		 	public boolean ObjetDessous(){		int i=0;		boolean t = false;		while(!t && i<tetraminoActuel.coordsTetrimino.length){			if (grille[tetraminoActuel.origineTetramino.y+tetraminoActuel.coordsTetrimino[i].y+1][tetraminoActuel.origineTetramino.x+tetraminoActuel.coordsTetrimino[i].x]!=Color.black){						t = true;							}						i++;		}        return t;	}		public boolean ObjetDroite(){		int i=0;		boolean t = false;		while(!t && i<tetraminoActuel.coordsTetrimino.length){			if (grille[tetraminoActuel.origineTetramino.y+tetraminoActuel.coordsTetrimino[i].y][tetraminoActuel.origineTetramino.x+tetraminoActuel.coordsTetrimino[i].x+1]!=Color.black){						t = true;			}						i++;		}        return t;	}		public boolean ObjetGauche(){		int i=0;		boolean t = false;		while(!t && i<4){			if (grille[tetraminoActuel.origineTetramino.y+tetraminoActuel.coordsTetrimino[i].y][tetraminoActuel.origineTetramino.x+tetraminoActuel.coordsTetrimino[i].x-1]!=Color.black){				t = true;							}						i++;		}        return t;	}		public void Descendre() {		if(!ObjetDessous()){			tetraminoActuel.origineTetramino=new Point(tetraminoActuel.origineTetramino.x,tetraminoActuel.origineTetramino.y+1);		}else{			FixerPiece();		}	}  		public void FixerPiece() {		for(int i=0;i<4;i++){			grille[tetraminoActuel.coordsTetrimino[i].y+tetraminoActuel.origineTetramino.y][tetraminoActuel.coordsTetrimino[i].x+tetraminoActuel.origineTetramino.x]=tetraminoActuel.couleurTetra;		}		NettoyerLignes();		initialiserTetramino();		}		public void DeplacementADroite() {		if(!ObjetDroite()){			tetraminoActuel.origineTetramino=new Point(tetraminoActuel.origineTetramino.x+1,tetraminoActuel.origineTetramino.y);		}	}    	public void DeplacementAGauche() {		if(!ObjetGauche()){			tetraminoActuel.origineTetramino=new Point(tetraminoActuel.origineTetramino.x-1,tetraminoActuel.origineTetramino.y);		}	}  			public boolean RotationPossible(){		boolean t=true;		for(int i=0;i<4;i++){			if(grille[tetraminoActuel.coordsTetrimino[i].x+tetraminoActuel.origineTetramino.y][-tetraminoActuel.coordsTetrimino[i].y+tetraminoActuel.origineTetramino.x]!=Color.BLACK){				t=false;			}		}		return t;	}			public void Rotation(){		if(tetraminoActuel.couleurTetra != Color.yellow && RotationPossible()){			for (int i = 0; i < 4; ++i) {				int a = -tetraminoActuel.coordsTetrimino[i].y;				int b=tetraminoActuel.coordsTetrimino[i].x;				tetraminoActuel.coordsTetrimino[i].x=a;				tetraminoActuel.coordsTetrimino[i].y=b;								}		}	}		public void NettoyerLignes() {		boolean t;		int nbrLigneSup = 0;				for (int j = 19; j > 0; j--) {			t = false;			for (int i = 1; i < 11; i++) {				if (grille[j][i] == Color.BLACK) {					t = true;				}			}			if (!t) {				SupprimerLigne(j);				j += 1;				nbrLigneSup += 1;				niveau++;			}		}				switch (nbrLigneSup) {		case 1:			score += 100;			break;		case 2:			score += 300;			break;		case 3:			score += 500;			break;		case 4:			score += 800;			break;		}	}	public void SupprimerLigne(int ligne) {		for (int j = ligne-1; j > 0; j--) {			for (int i = 1; i < 11; i++) {				grille[j+1][i] = grille[j][i];			}		}	}				}